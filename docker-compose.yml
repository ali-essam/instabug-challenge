version: '2'

services:
  # Our PostgreSQL service:
  postgres:
    image: postgres:9.6-alpine
    restart: always
    volumes:
      # We'll mount the 'postgres-data' volume into the location Postgres stores it's data:
      - ./volumes/postgres-data:/var/lib/postgresql/data

  # Our Redis service:
  redis:
    image: redis:3.2.4-alpine
    restart: always
    volumes:
      # We'll mount the 'redis-data' volume into the location redis stores it's data:
      - ./volumes/redis-data:/data
    command: redis-server --appendonly yes

  rabbitmq:
    image: rabbitmq:3.6.9-alpine
    restart: always
    volumes:
      - ./volumes/rabbitmq:/var/lib/rabbitmq

  es:
    image: elasticsearch:5.4.0-alpine
    restart: always
    ports:
      - "9200:9200"
    volumes:
      - ./volumes/es:/usr/share/elasticsearch/data

  web:
    build: .
    command: sh -c "sh wait-curl.sh es:9200 && sh ./init.sh && rails s -p 3000 -b '0.0.0.0'"
    restart: always
    volumes:
      - .:/app
    ports:
      - "3000:3000"
    links:
      - postgres
      - redis
      - es
      - rabbitmq
    environment:
      - POSTGRES_HOST=postgres
      - REDIS_HOST=redis
      - RABBITMQ_HOST=rabbitmq
      - ES_HOST=es

  worker:
    build: .
    command: sh -c "sh wait-curl.sh es:9200 && rake sneakers:run"
    restart: always
    volumes:
      - .:/app
    links:
      - postgres
      - redis
      - es
      - rabbitmq
    depends_on:
      - web
    environment:
      - WORKERS=BugsWorker
      - POSTGRES_HOST=postgres
      - REDIS_HOST=redis
      - RABBITMQ_HOST=rabbitmq
      - ES_HOST=es
